on: [push, pull_request]
jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - msvc_config: x64-Release
            msvc_arch: amd64
            build_type: RelWithDebInfo
            test: true
          - msvc_config: x86-Release
            msvc_arch: amd64_x86
            build_type: RelWithDebInfo
            test: false
          - msvc_config: x64-Debug
            msvc_arch: amd64
            build_type: Debug
            test: true
          - msvc_config: x86-Debug
            msvc_arch: amd64_x86
            build_type: Debug
            test: false
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.msvc_arch }}
      - run: cmake -S src -B src/out/build/${{ matrix.msvc_config }} -G Ninja -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_INSTALL_PREFIX:PATH=${{ github.workspace }}/src/out/install/${{ matrix.msvc_config }}
      - run: cmake --build src/out/build/${{ matrix.msvc_config }}
      - run: cmake --install src/out/build/${{ matrix.msvc_config }}
      - uses: actions/upload-artifact@v2
        with:
          name: WinSoftVol-${{ matrix.msvc_config }}
          path: src/out/install/${{ matrix.msvc_config }}/
      - run: (Get-AuthenticodeSignature src/out/install/${{ matrix.msvc_config }}/bin/WinSoftVol_TestSigned.sys).SignerCertificate | Export-Certificate -FilePath cert.cer
        shell: powershell
      - run: Import-Certificate -FilePath cert.cer -CertStoreLocation Cert:\LocalMachine\root
        shell: powershell
      - run: sc.exe create WinSoftVol ("binPath=" + (Resolve-Path "src/out/install/${{ matrix.msvc_config }}/bin/WinSoftVol_TestSigned.sys")) type=kernel
      - run: sc.exe start WinSoftVol
        if: ${{ matrix.test }}
